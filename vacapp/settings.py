"""
Django settings for vacapp project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see:
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see:
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# BASE_DIR points to the root directory of the project (one level above this settings.py)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-nqs2i(3(r4+(j)j@d*wbo%75@0#o%hjv&p2vh8p=(ye7ta+m3l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# List of host/domain names the app can serve
ALLOWED_HOSTS = []


# Application definition
INSTALLED_APPS = [
    'pages.apps.PagesConfig',      # Local app: pages
    'news.apps.NewsConfig',        # Local app: news
    'rest_framework',              # Django REST Framework
    'api',                         # Local app: api
    'django.contrib.admin',        # Admin interface
    'django.contrib.auth',         # Authentication system
    'django.contrib.contenttypes', # Content type framework
    'django.contrib.sessions',     # Session management
    'django.contrib.messages',     # Messaging framework
    'django.contrib.staticfiles',  # Static files handling
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',      # Enables session support
    'django.middleware.common.CommonMiddleware',                 # Adds basic request/response utilities
    'django.middleware.csrf.CsrfViewMiddleware',                 # Protects against Cross-Site Request Forgery
    'django.contrib.auth.middleware.AuthenticationMiddleware',   # Associates users with requests
    'django.contrib.messages.middleware.MessageMiddleware',      # Enables message framework
    'django.middleware.clickjacking.XFrameOptionsMiddleware',    # Protects against clickjacking
]

# Root URL configuration
ROOT_URLCONF = 'vacapp.urls'

# Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Custom template directory
        'APP_DIRS': True,  # Look for templates inside app directories
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application path
WSGI_APPLICATION = 'vacapp.wsgi.application'


# Database configuration (PostgreSQL using environment variables inside Docker)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',                         # PostgreSQL backend
        'NAME': os.getenv('DB_NAME', 'vaccine_db'),                        # Database name
        'USER': os.getenv('DB_USER', 'user'),                              # Database user
        'PASSWORD': os.getenv('DB_PASSWORD', 'pass'),                      # User password
        'HOST': os.getenv('DB_HOST', 'localhost'),                         # Database host
        'PORT': os.getenv('DB_PORT', '5432'),                              # Database port
    }
}


# Password validation rules
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization settings
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True           # Enable Django’s translation system
USE_TZ = True             # Use timezone-aware datetimes


# Static file settings
STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # Directory for collectstatic in production
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'vacapp/static')  # Additional static files directory
]


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Enable CORS for all origins (for development only — restrict in production)
INSTALLED_APPS += ['corsheaders']
MIDDLEWARE = ['corsheaders.middleware.CorsMiddleware'] + MIDDLEWARE
CORS_ALLOW_ALL_ORIGINS = True

# Custom test runner: disables DB creation/teardown
TEST_RUNNER = 'test_runner.NoDbTestRunner'
