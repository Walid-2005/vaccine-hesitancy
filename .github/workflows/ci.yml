name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.10
        env:
          POSTGRES_DB: vaccine_db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      DB_NAME: vaccine_db
      DB_USER: user
      DB_PASSWORD: pass
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      SECRET_KEY: test-secret-key
      TF_CPP_MIN_LOG_LEVEL: "3"   # quiet TensorFlow/keras logs
      # DJANGO_SETTINGS_MODULE: <your_project>.settings  # uncomment and set if manage.py doesn't

    steps:
      - name: Checkout code (with LFS for model files)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: System packages for psycopg2 (safe to keep)
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev python3-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          for i in {1..60}; do
            if pg_isready -h "$DB_HOST" -p "$DB_PORT" -d "$DB_NAME" -U "$DB_USER"; then
              exit 0
            fi
            echo "Waiting for Postgres..."
            sleep 2
          done
          echo "Postgres did not become ready in time" >&2
          exit 1

      - name: List model assets (sanity check)
        run: |
          ls -R model || true
          ls -R models || true
          ls -R assets || true

      - name: Run migrations and tests
        run: |
          python manage.py migrate --noinput
          python manage.py test --noinput -v 2
